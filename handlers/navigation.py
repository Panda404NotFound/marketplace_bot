from aiogram import types
from aiogram.dispatcher import FSMContext

from keyboards.keyboards import get_main_menu
from keyboards.fallback import register_fallback_handlers

async def process_main_menu(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    try:
        await callback_query.answer()
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        current_state = await state.get_state()
        if current_state:
            await state.finish()
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        from keyboards.fallback import user_navigation_history
        user_id = callback_query.from_user.id
        if user_id in user_navigation_history:
            user_navigation_history[user_id] = []
        
        await callback_query.message.edit_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å:\n"
            "‚Ä¢ üë§ –ú–æ–π –∫–∞–±–∏–Ω–µ—Ç - –ø—Ä–æ—Ñ–∏–ª—å, –∑–∞–∫–∞–∑—ã, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n"
            "‚Ä¢ üõçÔ∏è –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä\n"
            "‚Ä¢ üöö –î–æ—Å—Ç–∞–≤–∫–∞ - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ\n"
            "‚Ä¢ üõí –ú–æ—è –∫–æ—Ä–∑–∏–Ω–∞ - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏\n\n"
            "üìå –í –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –º–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–ª–∏ –≤–≤–µ—Å—Ç–∏ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏",
            reply_markup=get_main_menu()
        )
    except Exception as e:
        print(f"Error in process_main_menu for user {callback_query.from_user.id}: {e}")
        # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        try:
            await callback_query.message.reply(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:\n"
                "‚Ä¢ üë§ –ú–æ–π –∫–∞–±–∏–Ω–µ—Ç - –ø—Ä–æ—Ñ–∏–ª—å, –∑–∞–∫–∞–∑—ã, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n"
                "‚Ä¢ üõçÔ∏è –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä\n"
                "‚Ä¢ üöö –î–æ—Å—Ç–∞–≤–∫–∞ - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ\n"
                "‚Ä¢ üõí –ú–æ—è –∫–æ—Ä–∑–∏–Ω–∞ - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏",
                reply_markup=get_main_menu()
            )
        except:
            pass

def register_navigation_handlers(dp):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏."""
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    dp.register_callback_query_handler(
        process_main_menu,
        lambda c: c.data == "main_menu",
        state="*"
    )
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–∑ –º–æ–¥—É–ª—è fallback
    register_fallback_handlers(dp)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" —Ç–µ–ø–µ—Ä—å —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è –≤ fallback.py
    # dp.register_callback_query_handler(
    #     process_back,
    #     lambda c: c.data == "back",
    #     state="*"
    # ) 