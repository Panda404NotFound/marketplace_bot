from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.utils.exceptions import MessageNotModified
import time

from keyboards.keyboards import (
    get_main_menu, get_cabinet_menu, get_delivery_menu, 
    get_cart_menu, get_payment_methods, get_back_menu
)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# –°—Ç—Ä—É–∫—Ç—É—Ä–∞: {user_id: {'prev_screen': 'main', 'prev_data': {...}}}
user_navigation_history = {}

# –°–ª–æ–≤–∞—Ä—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ä–∞–∑–¥–µ–ª–æ–≤ –∏ —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —ç—Ç–∏–º —Ä–∞–∑–¥–µ–ª–∞–º
menu_generators = {
    'main': get_main_menu,
    'cabinet': get_cabinet_menu, 
    'delivery': get_delivery_menu,
    'cart': get_cart_menu,
    'payment': get_payment_methods,
}

# –°–ª–æ–≤–∞—Ä—å —Ç–µ–∫—Å—Ç–æ–≤ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —ç–∫—Ä–∞–Ω–æ–≤
screen_texts = {
    'main': "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å:\n"
            "‚Ä¢ üë§ –ú–æ–π –∫–∞–±–∏–Ω–µ—Ç - –ø—Ä–æ—Ñ–∏–ª—å, –∑–∞–∫–∞–∑—ã, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n"
            "‚Ä¢ üõçÔ∏è –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä\n"
            "‚Ä¢ üöö –î–æ—Å—Ç–∞–≤–∫–∞ - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ\n"
            "‚Ä¢ üõí –ú–æ—è –∫–æ—Ä–∑–∏–Ω–∞ - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏\n\n"
            "üìå –í –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –º–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–ª–∏ –≤–≤–µ—Å—Ç–∏ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏",
    'cabinet': "üë§ <b>–ú–æ–π –∫–∞–±–∏–Ω–µ—Ç</b>\n\n"
               "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏–º –ø—Ä–æ—Ñ–∏–ª–µ–º, –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∑–∞–∫–∞–∑–æ–≤ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.",
    'delivery': "üöö <b>–î–æ—Å—Ç–∞–≤–∫–∞</b>\n\n"
                "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ –∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞—Ö –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞.",
    'cart': "üõí <b>–ú–æ—è –∫–æ—Ä–∑–∏–Ω–∞</b>\n\n"
            "–ó–¥–µ—Å—å –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤–∞—à–∏ —Ç–æ–≤–∞—Ä—ã, –º–æ–∂–Ω–æ —É–ø—Ä–∞–≤–ª—è—Ç—å –∫–æ—Ä–∑–∏–Ω–æ–π –∏ –æ—Ñ–æ—Ä–º–ª—è—Ç—å –∑–∞–∫–∞–∑—ã.",
    'payment': "üí≥ <b>–û–ø–ª–∞—Ç–∞</b>\n\n"
              "–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –¥–ª—è –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞:"
}

async def save_navigation_state(user_id: int, screen: str, state_data=None):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–µ–∫—É—â–∏–π —ç–∫—Ä–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞–∑–∞–¥.
    
    Args:
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        screen: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —ç–∫—Ä–∞–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'main', 'cabinet', 'profile')
        state_data: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è (–¥–ª—è —ç–∫—Ä–∞–Ω–æ–≤ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏)
    """
    if user_id not in user_navigation_history:
        user_navigation_history[user_id] = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —ç–∫—Ä–∞–Ω –≤ –∏—Å—Ç–æ—Ä–∏—é
    # –î–∞–∂–µ –µ—Å–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —ç–∫—Ä–∞–Ω —Ç–∞–∫–æ–π –∂–µ, –º—ã –≤—Å—ë —Ä–∞–≤–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º,
    # —á—Ç–æ–±—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å–ª—É—á–∞–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ–¥–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞
    user_navigation_history[user_id].append({
        'screen': screen,
        'state_data': state_data or {},
        'timestamp': int(time.time())  # –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è
    })
    
    # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–æ 10 –∑–∞–ø–∏—Å–µ–π
    if len(user_navigation_history[user_id]) > 10:
        user_navigation_history[user_id].pop(0)
    
    # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ - –≤—ã–≤–æ–¥–∏–º –≤ –ª–æ–≥ —Ç–µ–∫—É—â—É—é –∏—Å—Ç–æ—Ä–∏—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    # print(f"Navigation history for user {user_id}: {[item['screen'] for item in user_navigation_history[user_id]]}")

async def get_previous_screen(user_id: int):
    """
    –ü–æ–ª—É—á–∞–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏–π —ç–∫—Ä–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    
    Args:
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        
    Returns:
        tuple: (screen, state_data) –∏–ª–∏ ('main', {}) –µ—Å–ª–∏ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ—Ç
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –∏—Å—Ç–æ—Ä–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    if user_id not in user_navigation_history:
        # print(f"No navigation history for user {user_id}")
        return 'main', {}
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ –∏—Å—Ç–æ—Ä–∏–∏ –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã –¥–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–∞
    # (—Ç–µ–∫—É—â–∏–π —ç–∫—Ä–∞–Ω –∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–π)
    if len(user_navigation_history[user_id]) < 2:
        # print(f"Not enough history for user {user_id}, only {len(user_navigation_history[user_id])} items")
        return 'main', {}
    
    # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —ç–∫—Ä–∞–Ω
    current_screen = user_navigation_history[user_id].pop()
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —ç–∫—Ä–∞–Ω
    prev_screen = user_navigation_history[user_id][-1]
    
    # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ - –≤—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–µ—Ä–µ—Ö–æ–¥–µ
    # print(f"User {user_id} navigating back from '{current_screen['screen']}' to '{prev_screen['screen']}'")
    
    return prev_screen['screen'], prev_screen['state_data']

async def process_fallback(callback_query: types.CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" —Å –ª–æ–≥–∏–∫–æ–π –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —ç–∫—Ä–∞–Ω.
    
    Args:
        callback_query: –û–±—ä–µ–∫—Ç callback_query
        state: FSMContext –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
    """
    try:
        await callback_query.answer()
        
        user_id = callback_query.from_user.id
        prev_screen, prev_data = await get_previous_screen(user_id)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–µ–Ω—é –¥–ª—è –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —ç–∫—Ä–∞–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if prev_screen in menu_generators:
            try:
                # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —ç–∫—Ä–∞–Ω–∞
                menu_markup = menu_generators[prev_screen]()
                screen_text = screen_texts.get(prev_screen, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                await callback_query.message.edit_text(
                    screen_text,
                    reply_markup=menu_markup,
                    parse_mode='HTML'
                )
                # print(f"Successfully navigated user {user_id} back to '{prev_screen}'")
            except MessageNotModified:
                # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
                # print(f"Message not modified for user {user_id} when navigating to '{prev_screen}'")
                pass
            except Exception as e:
                # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
                # print(f"Error navigating back to '{prev_screen}' for user {user_id}: {e}")
                # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—ã—Ç–∞–µ–º—Å—è –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
                await callback_query.message.edit_text(
                    "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å:\n"
                    "‚Ä¢ üë§ –ú–æ–π –∫–∞–±–∏–Ω–µ—Ç - –ø—Ä–æ—Ñ–∏–ª—å, –∑–∞–∫–∞–∑—ã, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n"
                    "‚Ä¢ üõçÔ∏è –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä\n"
                    "‚Ä¢ üöö –î–æ—Å—Ç–∞–≤–∫–∞ - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ\n"
                    "‚Ä¢ üõí –ú–æ—è –∫–æ—Ä–∑–∏–Ω–∞ - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏\n\n"
                    "üìå –í –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –º–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–ª–∏ –≤–≤–µ—Å—Ç–∏ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏",
                    reply_markup=get_main_menu()
                )
        else:
            # –ï—Å–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —ç–∫—Ä–∞–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ menu_generators,
            # –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ
            if prev_screen == 'profile':
                # –û—Å–æ–±–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è
                await callback_query.message.edit_text(
                    "üè† <b>–ú–æ–π –∫–∞–±–∏–Ω–µ—Ç</b>\n\n"
                    "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏–º –ø—Ä–æ—Ñ–∏–ª–µ–º, "
                    "–ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∑–∞–∫–∞–∑–æ–≤ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.",
                    reply_markup=get_cabinet_menu(),
                    parse_mode='HTML'
                )
            elif prev_screen == 'show_address':
                # –û—Å–æ–±–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –∞–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
                await callback_query.message.edit_text(
                    "üöö <b>–î–æ—Å—Ç–∞–≤–∫–∞</b>\n\n"
                    "–í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç–∞–≤–∫–µ –≤–∞—à–∏—Ö –∑–∞–∫–∞–∑–æ–≤.",
                    reply_markup=get_delivery_menu(),
                    parse_mode='HTML'
                )
            else:
                # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
                await callback_query.message.edit_text(
                    "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å:\n"
                    "‚Ä¢ üë§ –ú–æ–π –∫–∞–±–∏–Ω–µ—Ç - –ø—Ä–æ—Ñ–∏–ª—å, –∑–∞–∫–∞–∑—ã, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n"
                    "‚Ä¢ üõçÔ∏è –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä\n"
                    "‚Ä¢ üöö –î–æ—Å—Ç–∞–≤–∫–∞ - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ\n"
                    "‚Ä¢ üõí –ú–æ—è –∫–æ—Ä–∑–∏–Ω–∞ - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏\n\n"
                    "üìå –í –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –º–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–ª–∏ –≤–≤–µ—Å—Ç–∏ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏",
                    reply_markup=get_main_menu()
                )
    except Exception as e:
        # print(f"Critical error in process_fallback for user {callback_query.from_user.id}: {e}")
        # –í —Å–ª—É—á–∞–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–∏ –ø—ã—Ç–∞–µ–º—Å—è –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        try:
            await callback_query.message.edit_text(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:\n"
                "‚Ä¢ üë§ –ú–æ–π –∫–∞–±–∏–Ω–µ—Ç - –ø—Ä–æ—Ñ–∏–ª—å, –∑–∞–∫–∞–∑—ã, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n"
                "‚Ä¢ üõçÔ∏è –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä\n"
                "‚Ä¢ üöö –î–æ—Å—Ç–∞–≤–∫–∞ - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ\n"
                "‚Ä¢ üõí –ú–æ—è –∫–æ—Ä–∑–∏–Ω–∞ - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏",
                reply_markup=get_main_menu()
            )
        except:
            # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –≤—Ç–æ—Ä–∏—á–Ω—ã–µ –æ—à–∏–±–∫–∏
            pass

def register_fallback_handlers(dp):
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã fallback.
    
    Args:
        dp: –î–∏—Å–ø–µ—Ç—á–µ—Ä –±–æ—Ç–∞
    """
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
    dp.register_callback_query_handler(
        process_fallback,
        lambda c: c.data == "back",
        state="*"
    ) 

def reset_navigation_history(user_id: int):
    """
    –ü–æ–ª–Ω–æ—Å—Ç—å—é —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    
    Args:
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    if user_id in user_navigation_history:
        # print(f"Resetting navigation history for user {user_id}")
        user_navigation_history[user_id] = []
        return True
    return False

# –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
__all__ = [
    'save_navigation_state',
    'get_previous_screen',
    'process_fallback',
    'register_fallback_handlers',
    'reset_navigation_history'
] 